name: Create GitHub Release

on:
    pull_request:
        types: [closed]
        branches:
            - 'release/*'
            - 'hotfix/*'

permissions:
    contents: write

jobs:
    tag-and-release:
        runs-on: ubuntu-latest
        if: github.event.pull_request.merged == true && (startsWith(github.event.pull_request.base.ref, 'release/') || startsWith(github.event.pull_request.base.ref, 'hotfix/'))
        steps:
            - uses: actions/checkout@v5

            - name: Extract version from branch
              id: extract
              run: |
                BRANCH="${GITHUB_REF##*/}"
                BRANCH="${GITHUB_REF##*/}"
                if [[ "$BRANCH" == release/* ]]; then
                  VERSION="${BRANCH#release/}"
                elif [[ "$BRANCH" == hotfix/* ]]; then
                  VERSION="${BRANCH#hotfix/}"
                else
                  echo "Branch name does not match release/* or hotfix/* pattern."
                  exit 1
                fi
                echo "version=v$VERSION" >> "$GITHUB_OUTPUT"
            - name: Create Git tag
              uses: actions/github-script@v7
              with: 
                script: |
                    const tag = '${{ steps.extract.outputs.version }}';
                    const { repo, owner } = context.repo;
                    await github.rest.git.createRef({
                        owner,
                        repo,
                        ref: `refs/tags/${tag}`,
                        sha: context.sha
                    });
                    console.log(`âœ… Created tag ${tag}`);

            - name: Create GitHub Release
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                gh release create "${{ steps.extract.outputs.version }}" --title "Release ${{ steps.extract.outputs.version }}" --generate-notes
                