name: Pylint

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string

jobs: 
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: [3.13]
        steps:
            - uses: actions/checkout@v4

            # Set up Python environment
            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                pip install --no-cache-dir poetry
                poetry config virtualenvs.create false
                poetry install --no-root
                pip install --no-cache-dir pylint
            # Cache Poetry dependencies
            - name: Cache Poetry dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pypoetry
                  key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
                  restore-keys: |
                    poetry-${{ runner.os }}-

            # Run Pylint
            - name: Analysing code with Pylint
              continue-on-error: true
              run: |
                pylint app tests --output-format=parseable > pylint-report.txt
            # Upload Pylint report
            - name: Upload Pylint report
              uses: actions/upload-artifact@v4
              with:
                name: pylint-report
                path: pylint-report.txt
            # Show Pylint report
            - name: Show Pylint report
              if: always()
              run: cat pylint-report.txt || echo "No Pylint report found"
