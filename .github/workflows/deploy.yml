name: Deploy on Release

on:
  release:
    types: [published]

jobs:
  build-and-push:
    if: ${{ github.event.release.target_commitish == 'main' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment:
      name: production

    permissions:
      contents: read
      packages: write
      id-token: write # for OIDC
      attestations: write 

    env:
      REPO_LC: vorckea/${{ github.event.repository.name }}
      IMAGE_NAME: ghcr.io/vorckea/${{ github.event.repository.name }}
      TAG: ${{ github.event.release.tag_name }}
       
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Verify release tag is semver
        id: verify_tag
        run: |
          TAG="${{ github.event.release.tag_name }}"
          echo "Release tag: $TAG"
          if [[ ! "$TAG" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z.-]+)?$ ]]; then
            echo "❌ Release tag is not semver (expected v1.2.3 or 1.2.3). Aborting."
            exit 1
          fi

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Extract release version
        id: extract_version
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=semver,pattern={{version}}
            type=semver,pattern={{version}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and Push Docker Image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .  
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.extract_version.outputs.tags }}
          cache-from: type=local,src=.cache/buildx
          cache-to: type=local,dest=.cache/buildx-new,mode=max

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}
          format: cyclonedx
          output-file: sbom.cyclonedx.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.cyclonedx.json

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Scan image with Trivy (vuln check)
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "HIGH,CRITICAL"

      - name: Move new cache
        if: always()
        run: |
          rm -rf ./.cache/buildx
          mv ./.cache/buildx-new ./.cache/buildx

      - name: Deployment (placeholder)
        run: | 
          echo "✅ Image pushed: ${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}"
          echo "Add your deploy step here (e.g. kubectl apply / helm upgrade / ssh deploy)"