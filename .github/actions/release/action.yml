name: Create GitHub Release
inputs:
  pull_request_head_ref:
    type: string
    description: "The head ref of the pull request"
    required: true
  merge_commit_sha:
    type: string
    description: "The merge commit SHA of the pull request"
    required: true
  github_token:
    type: string
    description: "GitHub token (pass secrets.GITHUB_TOKEN from the workflow)"
    required: true
outputs:
  release_tag:
    description: "The created release tag"
    value: ${{ steps.extract.outputs.version }}
  release_name:
    description: "The name of the created release"
    value: "Release ${{ steps.extract.outputs.version }}"

runs:
  using: "composite"
  steps:
    - name: Extract version from branch
      id: extract
      shell: bash
      run: |
        BRANCH="${{ inputs.pull_request_head_ref }}"
        if [[ "$BRANCH" == release/* ]]; then
          VERSION="${BRANCH#release/}"
        elif [[ "$BRANCH" == hotfix/* ]]; then
          VERSION="${BRANCH#hotfix/}"
        else
          echo "Branch name does not match release/* or hotfix/* pattern."
          exit 1
        fi
        echo "version=v$VERSION" >> "$GITHUB_OUTPUT"
    
    - name: Create Git tag
      uses: actions/github-script@v7
      with: 
        script: |
            const tag = '${{ steps.extract.outputs.version }}';
            const { repo, owner } = context.repo;
            await github.rest.git.createRef({
                owner,
                repo,
                ref: `refs/tags/${tag}`,
                sha: '${{ inputs.merge_commit_sha }}'
            });
            console.log(`âœ… Created tag ${tag}`);
    - name: Create GitHub Release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        gh release create "${{ steps.extract.outputs.version }}" \
           --title "Release ${{ steps.extract.outputs.version }}" \
           --generate-notes